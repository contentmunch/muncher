"use strict";(self.webpackChunk_contentmunch_muncher=self.webpackChunk_contentmunch_muncher||[]).push([[795],{"./src/Muncher.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>src_Muncher_stories});var react=__webpack_require__("./node_modules/react/index.js"),LexicalComposer=__webpack_require__("./node_modules/@lexical/react/LexicalComposer.js"),LexicalContentEditable=__webpack_require__("./node_modules/@lexical/react/LexicalContentEditable.js"),LexicalHistoryPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalHistoryPlugin.js"),LexicalErrorBoundary=__webpack_require__("./node_modules/@lexical/react/LexicalErrorBoundary.js"),LexicalErrorBoundary_default=__webpack_require__.n(LexicalErrorBoundary),LexicalRichTextPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalRichTextPlugin.js"),LexicalRichText=__webpack_require__("./node_modules/@lexical/rich-text/LexicalRichText.js"),LexicalCode=__webpack_require__("./node_modules/@lexical/code/LexicalCode.js"),LexicalListPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalListPlugin.js"),LexicalList=__webpack_require__("./node_modules/@lexical/list/LexicalList.js"),LexicalTable=__webpack_require__("./node_modules/@lexical/table/LexicalTable.js"),LexicalLink=__webpack_require__("./node_modules/@lexical/link/LexicalLink.js"),LexicalAutoFocusPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalAutoFocusPlugin.js"),LexicalComposerContext=__webpack_require__("./node_modules/@lexical/react/LexicalComposerContext.js"),LexicalHtml=__webpack_require__("./node_modules/@lexical/html/LexicalHtml.js"),Lexical=__webpack_require__("./node_modules/lexical/Lexical.js"),LexicalOnChangePlugin=__webpack_require__("./node_modules/@lexical/react/LexicalOnChangePlugin.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const HtmlPlugin=_ref=>{let{html,onChange}=_ref;const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,react.useEffect)((()=>{console.log("html:",html),html&&editor.update((()=>{const dom=(new DOMParser).parseFromString(html,"text/html"),nodes=(0,LexicalHtml.$generateNodesFromDOM)(editor,dom);(0,Lexical.$getRoot)().select(),(0,Lexical.$insertNodes)(nodes)}))}),[html,editor]),(0,jsx_runtime.jsx)(LexicalOnChangePlugin.OnChangePlugin,{onChange:editorState=>{editorState.read((()=>{var _editor$getRootElemen,_editor$getRootElemen2;const count=null===(_editor$getRootElemen=editor.getRootElement())||void 0===_editor$getRootElemen||null===(_editor$getRootElemen2=_editor$getRootElemen.textContent)||void 0===_editor$getRootElemen2?void 0:_editor$getRootElemen2.length;onChange((0,LexicalHtml.$generateHtmlFromNodes)(editor),count||0)}))}})};try{HtmlPlugin.displayName="HtmlPlugin",HtmlPlugin.__docgenInfo={description:"",displayName:"HtmlPlugin",props:{html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(html: string, characterCount: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plugins/HtmlPlugin.tsx#HtmlPlugin"]={docgenInfo:HtmlPlugin.__docgenInfo,name:"HtmlPlugin",path:"src/plugins/HtmlPlugin.tsx#HtmlPlugin"})}catch(__react_docgen_typescript_loader_error){}const MuncherEditorTheme={ltr:"ltr",rtl:"rtl",placeholder:"muncher-editor-placeholder",paragraph:"muncher-editor-paragraph",quote:"muncher-editor-quote",heading:{h1:"muncher-editor-heading-h1",h2:"muncher-editor-heading-h2",h3:"muncher-editor-heading-h3",h4:"muncher-editor-heading-h4",h5:"muncher-editor-heading-h5"},list:{nested:{listitem:"muncher-editor-nested-listitem"},ol:"muncher-editor-list-ol",ul:"muncher-editor-list-ul",listitem:"muncher-editor-listitem"},image:"muncher-editor-image",link:"muncher-editor-link",text:{bold:"muncher-editor-text-bold",italic:"muncher-editor-text-italic",overflowed:"muncher-editor-text-overflowed",hashtag:"muncher-editor-text-hashtag",underline:"muncher-editor-text-underline",strikethrough:"muncher-editor-text-strikethrough",underlineStrikethrough:"muncher-editor-text-underlineStrikethrough",code:"muncher-editor-text-code"},code:"muncher-editor-code",codeHighlight:{atrule:"muncher-editor-tokenAttr",attr:"muncher-editor-tokenAttr",boolean:"muncher-editor-tokenProperty",builtin:"muncher-editor-tokenSelector",cdata:"muncher-editor-tokenComment",char:"muncher-editor-tokenSelector",class:"muncher-editor-tokenFunction","class-name":"muncher-editor-tokenFunction",comment:"muncher-editor-tokenComment",constant:"muncher-editor-tokenProperty",deleted:"muncher-editor-tokenProperty",doctype:"muncher-editor-tokenComment",entity:"muncher-editor-tokenOperator",function:"muncher-editor-tokenFunction",important:"muncher-editor-tokenVariable",inserted:"muncher-editor-tokenSelector",keyword:"muncher-editor-tokenAttr",namespace:"muncher-editor-tokenVariable",number:"muncher-editor-tokenProperty",operator:"muncher-editor-tokenOperator",prolog:"muncher-editor-tokenComment",property:"muncher-editor-tokenProperty",punctuation:"muncher-editor-tokenPunctuation",regex:"muncher-editor-tokenVariable",selector:"muncher-editor-tokenSelector",string:"muncher-editor-tokenSelector",symbol:"muncher-editor-tokenProperty",tag:"muncher-editor-tokenProperty",url:"muncher-editor-tokenOperator",variable:"muncher-editor-tokenVariable"}};var LexicalLinkPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalLinkPlugin.js");const Button_Button=_ref=>{let{disabled,onClick,title,ariaLabel,active,children}=_ref;return(0,jsx_runtime.jsx)("button",{disabled,onClick,title,type:"button",className:active?"muncher-editor-button active":"muncher-editor-button","aria-label":ariaLabel,children})};try{Button_Button.displayName="Button",Button_Button.__docgenInfo={description:"",displayName:"Button",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"() => void"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!0,type:{name:"string"}},active:{defaultValue:null,description:"",name:"active",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui/Button.tsx#Button"]={docgenInfo:Button_Button.__docgenInfo,name:"Button",path:"src/ui/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}var LexicalUtils=__webpack_require__("./node_modules/@lexical/utils/LexicalUtils.js"),LexicalSelection=__webpack_require__("./node_modules/@lexical/selection/LexicalSelection.js");function getSelectedNode(selection){const anchor=selection.anchor,focus=selection.focus,anchorNode=selection.anchor.getNode(),focusNode=selection.focus.getNode();if(anchorNode===focusNode)return anchorNode;return selection.isBackward()?(0,LexicalSelection.$isAtNodeEnd)(focus)?anchorNode:focusNode:(0,LexicalSelection.$isAtNodeEnd)(anchor)?anchorNode:focusNode}const Divider_Divider=()=>(0,jsx_runtime.jsx)("div",{className:"muncher-editor-divider"});try{Divider_Divider.displayName="Divider",Divider_Divider.__docgenInfo={description:"",displayName:"Divider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui/Divider.tsx#Divider"]={docgenInfo:Divider_Divider.__docgenInfo,name:"Divider",path:"src/ui/Divider.tsx#Divider"})}catch(__react_docgen_typescript_loader_error){}const sanitizeUrl=url=>(url=String(url).trim()).match(/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi)||url.match(/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i)?url:"https://",blockTypeToBlockName={bullet:"Bulleted List",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",number:"Numbered List",check:"Check List",paragraph:"Normal",quote:"Quote"},ToolbarPlugin_ToolbarPlugin=_ref=>{let{setIsLinkEditMode}=_ref;const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),[activeEditor]=(0,react.useState)(editor),[blockType,setBlockType]=(0,react.useState)("paragraph"),[isLink,setIsLink]=(0,react.useState)(!1),[isBold,setIsBold]=(0,react.useState)(!1),[isItalic,setIsItalic]=(0,react.useState)(!1),[isUnderline,setIsUnderline]=(0,react.useState)(!1),[isCode,setIsCode]=(0,react.useState)(!1),[canUndo,setCanUndo]=(0,react.useState)(!1),[canRedo,setCanRedo]=(0,react.useState)(!1),[isEditable,setIsEditable]=(0,react.useState)((()=>editor.isEditable())),formatHeading=headingSize=>{blockType!==headingSize&&editor.update((()=>{const selection=(0,Lexical.$getSelection)();((0,Lexical.$isRangeSelection)(selection)||(0,Lexical.DEPRECATED_$isGridSelection)(selection))&&(0,LexicalSelection.$setBlocksType)(selection,(()=>(0,LexicalRichText.$createHeadingNode)(headingSize)))}))},insertLink=(0,react.useCallback)((()=>{isLink?editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,null):editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,sanitizeUrl("https://"))}),[editor,isLink]),updateToolbar=(0,react.useCallback)((()=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const anchorNode=selection.anchor.getNode();let element="root"===anchorNode.getKey()?anchorNode:(0,LexicalUtils.$findMatchingParent)(anchorNode,(e=>{const parent=e.getParent();return null!==parent&&(0,Lexical.$isRootOrShadowRoot)(parent)}));null===element&&(element=anchorNode.getTopLevelElementOrThrow());const elementKey=element.getKey(),elementDOM=activeEditor.getElementByKey(elementKey);setIsBold(selection.hasFormat("bold")),setIsItalic(selection.hasFormat("italic")),setIsUnderline(selection.hasFormat("underline")),setIsCode(selection.hasFormat("code"));const node=getSelectedNode(selection),parent=node.getParent();if((0,LexicalLink.$isLinkNode)(parent)||(0,LexicalLink.$isLinkNode)(node)?setIsLink(!0):setIsLink(!1),null!==elementDOM)if((0,LexicalList.$isListNode)(element)){const parentList=(0,LexicalUtils.$getNearestNodeOfType)(anchorNode,LexicalList.ListNode),type=parentList?parentList.getListType():element.getListType();setBlockType(type)}else{const type=(0,LexicalRichText.$isHeadingNode)(element)?element.getTag():element.getType();type in blockTypeToBlockName&&setBlockType(type)}}}),[activeEditor]);return(0,react.useEffect)((()=>(0,LexicalUtils.mergeRegister)(editor.registerEditableListener((editable=>{setIsEditable(editable)})),activeEditor.registerUpdateListener((_ref2=>{let{editorState}=_ref2;editorState.read((()=>{updateToolbar()}))})),activeEditor.registerCommand(Lexical.CAN_UNDO_COMMAND,(payload=>(setCanUndo(payload),!1)),Lexical.COMMAND_PRIORITY_CRITICAL),activeEditor.registerCommand(Lexical.CAN_REDO_COMMAND,(payload=>(setCanRedo(payload),!1)),Lexical.COMMAND_PRIORITY_CRITICAL))),[activeEditor,editor,updateToolbar]),(0,react.useEffect)((()=>activeEditor.registerCommand(Lexical.KEY_MODIFIER_COMMAND,(payload=>{const event=payload,{code,ctrlKey,metaKey}=event;return!("KeyK"!==code||!ctrlKey&&!metaKey)&&(event.preventDefault(),setIsLinkEditMode(!isLink),activeEditor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,sanitizeUrl("https://")))}),Lexical.COMMAND_PRIORITY_NORMAL)),[activeEditor,isLink,setIsLinkEditMode]),(0,jsx_runtime.jsxs)("div",{className:"muncher-editor-toolbar",children:[(0,jsx_runtime.jsx)(Button_Button,{disabled:!canUndo||!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.UNDO_COMMAND,void 0)},title:"Undo (⌘Z)",ariaLabel:"Undo",children:(0,jsx_runtime.jsx)("i",{className:"undo"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!canRedo||!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.REDO_COMMAND,void 0)},title:"Redo (⌘Y)",ariaLabel:"Redo",children:(0,jsx_runtime.jsx)("i",{className:"redo"})}),(0,jsx_runtime.jsx)(Divider_Divider,{}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"paragraph"===blockType,onClick:()=>{editor.update((()=>{const selection=(0,Lexical.$getSelection)();((0,Lexical.$isRangeSelection)(selection)||(0,Lexical.DEPRECATED_$isGridSelection)(selection))&&(0,LexicalSelection.$setBlocksType)(selection,(()=>(0,Lexical.$createParagraphNode)()))}))},title:"Paragraph",ariaLabel:"Paragraph",children:(0,jsx_runtime.jsx)("i",{className:"paragraph"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"h1"===blockType,onClick:()=>formatHeading("h1"),title:"Heading 1",ariaLabel:"Heading 1",children:(0,jsx_runtime.jsx)("i",{className:"h1"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"h2"===blockType,onClick:()=>formatHeading("h2"),title:"Heading 2",ariaLabel:"Heading 2",children:(0,jsx_runtime.jsx)("i",{className:"h2"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"h3"===blockType,onClick:()=>formatHeading("h3"),title:"Heading 3",ariaLabel:"Heading 3",children:(0,jsx_runtime.jsx)("i",{className:"h3"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"quote"===blockType,onClick:()=>{"quote"!==blockType&&editor.update((()=>{const selection=(0,Lexical.$getSelection)();((0,Lexical.$isRangeSelection)(selection)||(0,Lexical.DEPRECATED_$isGridSelection)(selection))&&(0,LexicalSelection.$setBlocksType)(selection,(()=>(0,LexicalRichText.$createQuoteNode)()))}))},title:"Quote",ariaLabel:"Quote",children:(0,jsx_runtime.jsx)("i",{className:"quote"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"bullet"===blockType,onClick:()=>{"bullet"!==blockType?editor.dispatchCommand(LexicalList.INSERT_UNORDERED_LIST_COMMAND,void 0):editor.dispatchCommand(LexicalList.REMOVE_LIST_COMMAND,void 0)},title:"Bullet list",ariaLabel:"Bullet list",children:(0,jsx_runtime.jsx)("i",{className:"bullet-list"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,active:"number"===blockType,onClick:()=>{"number"!==blockType?editor.dispatchCommand(LexicalList.INSERT_ORDERED_LIST_COMMAND,void 0):editor.dispatchCommand(LexicalList.REMOVE_LIST_COMMAND,void 0)},title:"Number list",ariaLabel:"Number list",children:(0,jsx_runtime.jsx)("i",{className:"numbered-list"})}),(0,jsx_runtime.jsx)(Divider_Divider,{}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"bold")},active:isBold,title:"Bold (⌘B)",ariaLabel:"text as bold. Shortcut:⌘B",children:(0,jsx_runtime.jsx)("i",{className:"bold"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"italic")},active:isItalic,title:"Itallic (⌘I)",ariaLabel:"text as italic. Shortcut:⌘I",children:(0,jsx_runtime.jsx)("i",{className:"italic"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"underline")},active:isUnderline,title:"Underline (⌘U)",ariaLabel:"text as underline. Shortcut:⌘U",children:(0,jsx_runtime.jsx)("i",{className:"underline"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"code")},active:isCode,title:"Code",ariaLabel:"text as code.",children:(0,jsx_runtime.jsx)("i",{className:"code"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:insertLink,active:isLink,ariaLabel:"Insert link",title:"Insert link",children:(0,jsx_runtime.jsx)("i",{className:"link"})}),(0,jsx_runtime.jsx)(Divider_Divider,{}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_ELEMENT_COMMAND,"left")},title:"Left Align",ariaLabel:"Left Align",children:(0,jsx_runtime.jsx)("i",{className:"left-align"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_ELEMENT_COMMAND,"center")},title:"Center Align",ariaLabel:"Center Align",children:(0,jsx_runtime.jsx)("i",{className:"center-align"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_ELEMENT_COMMAND,"right")},title:"Right Align",ariaLabel:"Right Align",children:(0,jsx_runtime.jsx)("i",{className:"right-align"})}),(0,jsx_runtime.jsx)(Button_Button,{disabled:!isEditable,onClick:()=>{activeEditor.dispatchCommand(Lexical.FORMAT_ELEMENT_COMMAND,"justify")},title:"Justify Align",ariaLabel:"Justify Align",children:(0,jsx_runtime.jsx)("i",{className:"justify-align"})})]})};try{ToolbarPlugin_ToolbarPlugin.displayName="ToolbarPlugin",ToolbarPlugin_ToolbarPlugin.__docgenInfo={description:"",displayName:"ToolbarPlugin",props:{setIsLinkEditMode:{defaultValue:null,description:"",name:"setIsLinkEditMode",required:!0,type:{name:"Dispatch<boolean>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plugins/ToolbarPlugin.tsx#ToolbarPlugin"]={docgenInfo:ToolbarPlugin_ToolbarPlugin.__docgenInfo,name:"ToolbarPlugin",path:"src/plugins/ToolbarPlugin.tsx#ToolbarPlugin"})}catch(__react_docgen_typescript_loader_error){}var react_dom=__webpack_require__("./node_modules/react-dom/index.js");const VERTICAL_GAP=10,HORIZONTAL_OFFSET=5;function setFloatingElemPositionForLinkEditor(targetRect,floatingElem,anchorElem){let verticalGap=arguments.length>3&&void 0!==arguments[3]?arguments[3]:VERTICAL_GAP,horizontalOffset=arguments.length>4&&void 0!==arguments[4]?arguments[4]:HORIZONTAL_OFFSET;const scrollerElem=anchorElem.parentElement;if(null===targetRect||!scrollerElem)return floatingElem.style.opacity="0",void(floatingElem.style.transform="translate(-10000px, -10000px)");const floatingElemRect=floatingElem.getBoundingClientRect(),anchorElementRect=anchorElem.getBoundingClientRect(),editorScrollerRect=scrollerElem.getBoundingClientRect();let top=targetRect.top-verticalGap,left=targetRect.left-horizontalOffset;top<editorScrollerRect.top&&(top+=floatingElemRect.height+targetRect.height+2*verticalGap),left+floatingElemRect.width>editorScrollerRect.right&&(left=editorScrollerRect.right-floatingElemRect.width-horizontalOffset),top-=anchorElementRect.top,left-=anchorElementRect.left,floatingElem.style.opacity="1",floatingElem.style.transform="translate(".concat(left,"px, ").concat(top,"px)")}function FloatingLinkEditor(_ref){let{editor,isLink,setIsLink,anchorElem,isLinkEditMode,setIsLinkEditMode}=_ref;const editorRef=(0,react.useRef)(null),inputRef=(0,react.useRef)(null),[linkUrl,setLinkUrl]=(0,react.useState)(""),[editedLinkUrl,setEditedLinkUrl]=(0,react.useState)("https://"),[lastSelection,setLastSelection]=(0,react.useState)(null),updateLinkEditor=(0,react.useCallback)((()=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const node=getSelectedNode(selection),parent=node.getParent();(0,LexicalLink.$isLinkNode)(parent)?setLinkUrl(parent.getURL()):(0,LexicalLink.$isLinkNode)(node)?setLinkUrl(node.getURL()):setLinkUrl("")}const editorElem=editorRef.current,nativeSelection=window.getSelection(),activeElement=document.activeElement;if(null===editorElem)return;const rootElement=editor.getRootElement();if(null!==selection&&null!==nativeSelection&&null!==rootElement&&rootElement.contains(nativeSelection.anchorNode)&&editor.isEditable()){var _nativeSelection$focu,_nativeSelection$focu2;const domRect=null===(_nativeSelection$focu=nativeSelection.focusNode)||void 0===_nativeSelection$focu||null===(_nativeSelection$focu2=_nativeSelection$focu.parentElement)||void 0===_nativeSelection$focu2?void 0:_nativeSelection$focu2.getBoundingClientRect();domRect&&(domRect.y+=40,setFloatingElemPositionForLinkEditor(domRect,editorElem,anchorElem)),setLastSelection(selection)}else activeElement&&"link-input"===activeElement.className||(null!==rootElement&&setFloatingElemPositionForLinkEditor(null,editorElem,anchorElem),setLastSelection(null),setIsLinkEditMode(!1),setLinkUrl(""));return!0}),[anchorElem,editor,setIsLinkEditMode]);(0,react.useEffect)((()=>{const scrollerElem=anchorElem.parentElement,update=()=>{editor.getEditorState().read((()=>{updateLinkEditor()}))};return window.addEventListener("resize",update),scrollerElem&&scrollerElem.addEventListener("scroll",update),()=>{window.removeEventListener("resize",update),scrollerElem&&scrollerElem.removeEventListener("scroll",update)}}),[anchorElem.parentElement,editor,updateLinkEditor]),(0,react.useEffect)((()=>(0,LexicalUtils.mergeRegister)(editor.registerUpdateListener((_ref2=>{let{editorState}=_ref2;editorState.read((()=>{updateLinkEditor()}))})),editor.registerCommand(Lexical.SELECTION_CHANGE_COMMAND,(()=>(updateLinkEditor(),!0)),Lexical.COMMAND_PRIORITY_LOW),editor.registerCommand(Lexical.KEY_ESCAPE_COMMAND,(()=>!!isLink&&(setIsLink(!1),!0)),Lexical.COMMAND_PRIORITY_HIGH))),[editor,updateLinkEditor,setIsLink,isLink]),(0,react.useEffect)((()=>{editor.getEditorState().read((()=>{updateLinkEditor()}))}),[editor,updateLinkEditor]),(0,react.useEffect)((()=>{isLinkEditMode&&inputRef.current&&inputRef.current.focus()}),[isLinkEditMode,isLink]);const handleLinkSubmission=()=>{null!==lastSelection&&(""!==linkUrl&&editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,sanitizeUrl(editedLinkUrl)),setEditedLinkUrl("https://"),setIsLinkEditMode(!1))};return(0,jsx_runtime.jsx)("div",{ref:editorRef,className:"link-editor",children:isLink?isLinkEditMode?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("input",{ref:inputRef,className:"link-input",value:editedLinkUrl,onChange:event=>{setEditedLinkUrl(event.target.value)},onKeyDown:event=>{(event=>{"Enter"===event.key?(event.preventDefault(),handleLinkSubmission()):"Escape"===event.key&&(event.preventDefault(),setIsLinkEditMode(!1))})(event)}}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("div",{className:"link-cancel",role:"button",tabIndex:0,onMouseDown:event=>event.preventDefault(),onClick:()=>{setIsLinkEditMode(!1)}}),(0,jsx_runtime.jsx)("div",{className:"link-confirm",role:"button",tabIndex:0,onMouseDown:event=>event.preventDefault(),onClick:handleLinkSubmission})]})]}):(0,jsx_runtime.jsxs)("div",{className:"link-view",children:[(0,jsx_runtime.jsx)("a",{href:sanitizeUrl(linkUrl),target:"_blank",rel:"noopener noreferrer",children:linkUrl}),(0,jsx_runtime.jsx)("div",{className:"link-edit",role:"button",tabIndex:0,onMouseDown:event=>event.preventDefault(),onClick:()=>{setEditedLinkUrl(linkUrl),setIsLinkEditMode(!0)}}),(0,jsx_runtime.jsx)("div",{className:"link-trash",role:"button",tabIndex:0,onMouseDown:event=>event.preventDefault(),onClick:()=>{editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,null)}})]}):null})}const FloatingLinkEditorPlugin_FloatingLinkEditorPlugin=_ref4=>{let{anchorElem,isLinkEditMode,setIsLinkEditMode}=_ref4;const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return function useFloatingLinkEditorToolbar(editor,anchorElem,isLinkEditMode,setIsLinkEditMode){const[activeEditor,setActiveEditor]=(0,react.useState)(editor),[isLink,setIsLink]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{function updateToolbar(){const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const node=getSelectedNode(selection),linkParent=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isLinkNode),autoLinkParent=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isAutoLinkNode);setIsLink(null!==linkParent&&null===autoLinkParent)}}return(0,LexicalUtils.mergeRegister)(editor.registerUpdateListener((_ref3=>{let{editorState}=_ref3;editorState.read((()=>{updateToolbar()}))})),editor.registerCommand(Lexical.SELECTION_CHANGE_COMMAND,((_payload,newEditor)=>(updateToolbar(),setActiveEditor(newEditor),!1)),Lexical.COMMAND_PRIORITY_CRITICAL),editor.registerCommand(Lexical.CLICK_COMMAND,(payload=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const node=getSelectedNode(selection),linkNode=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isLinkNode);if((0,LexicalLink.$isLinkNode)(linkNode)&&(payload.metaKey||payload.ctrlKey))return window.open(linkNode.getURL(),"_blank"),!0}return!1}),Lexical.COMMAND_PRIORITY_LOW))}),[editor]),(0,react_dom.createPortal)((0,jsx_runtime.jsx)(FloatingLinkEditor,{editor:activeEditor,isLink,anchorElem,setIsLink,isLinkEditMode,setIsLinkEditMode}),anchorElem)}(editor,anchorElem,isLinkEditMode,setIsLinkEditMode)};try{FloatingLinkEditorPlugin_FloatingLinkEditorPlugin.displayName="FloatingLinkEditorPlugin",FloatingLinkEditorPlugin_FloatingLinkEditorPlugin.__docgenInfo={description:"",displayName:"FloatingLinkEditorPlugin",props:{anchorElem:{defaultValue:null,description:"",name:"anchorElem",required:!0,type:{name:"HTMLElement"}},isLinkEditMode:{defaultValue:null,description:"",name:"isLinkEditMode",required:!0,type:{name:"boolean"}},setIsLinkEditMode:{defaultValue:null,description:"",name:"setIsLinkEditMode",required:!0,type:{name:"Dispatch<boolean>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plugins/FloatingLinkEditorPlugin.tsx#FloatingLinkEditorPlugin"]={docgenInfo:FloatingLinkEditorPlugin_FloatingLinkEditorPlugin.__docgenInfo,name:"FloatingLinkEditorPlugin",path:"src/plugins/FloatingLinkEditorPlugin.tsx#FloatingLinkEditorPlugin"})}catch(__react_docgen_typescript_loader_error){}const Muncher_Muncher=_ref=>{let{onChange,html}=_ref;const[isLinkEditMode,setIsLinkEditMode]=(0,react.useState)(!1),[floatingAnchorElem,setFloatingAnchorElem]=(0,react.useState)(null),initialConfig={namespace:"Muncher",theme:MuncherEditorTheme,onError:error=>console.error(error),nodes:[LexicalRichText.HeadingNode,LexicalList.ListNode,LexicalList.ListItemNode,LexicalRichText.QuoteNode,LexicalCode.CodeNode,LexicalCode.CodeHighlightNode,LexicalTable.TableNode,LexicalTable.TableCellNode,LexicalTable.TableRowNode,LexicalLink.AutoLinkNode,LexicalLink.LinkNode]};return(0,jsx_runtime.jsx)("div",{className:"muncher-editor",children:(0,jsx_runtime.jsxs)(LexicalComposer.LexicalComposer,{initialConfig,children:[(0,jsx_runtime.jsx)(ToolbarPlugin_ToolbarPlugin,{setIsLinkEditMode}),(0,jsx_runtime.jsxs)("div",{className:"muncher-editor-inner",ref:_floatingAnchorElem=>{null!==_floatingAnchorElem&&setFloatingAnchorElem(_floatingAnchorElem)},children:[(0,jsx_runtime.jsx)(LexicalRichTextPlugin.RichTextPlugin,{contentEditable:(0,jsx_runtime.jsx)(LexicalContentEditable.ContentEditable,{className:"muncher-editor-input"}),placeholder:(0,jsx_runtime.jsx)("div",{className:"muncher-editor-placeholder",children:"Enter some text..."}),ErrorBoundary:LexicalErrorBoundary_default()}),(0,jsx_runtime.jsx)(LexicalHistoryPlugin.HistoryPlugin,{}),(0,jsx_runtime.jsx)(LexicalAutoFocusPlugin.AutoFocusPlugin,{}),(0,jsx_runtime.jsx)(LexicalListPlugin.ListPlugin,{}),(0,jsx_runtime.jsx)(LexicalLinkPlugin.LinkPlugin,{}),floatingAnchorElem?(0,jsx_runtime.jsx)(FloatingLinkEditorPlugin_FloatingLinkEditorPlugin,{anchorElem:floatingAnchorElem,isLinkEditMode,setIsLinkEditMode}):"",(0,jsx_runtime.jsx)(HtmlPlugin,{onChange,html})]})]})})};try{Muncher_Muncher.displayName="Muncher",Muncher_Muncher.__docgenInfo={description:"",displayName:"Muncher",props:{html:{defaultValue:null,description:"",name:"html",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(html: string, characterCount: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Muncher.tsx#Muncher"]={docgenInfo:Muncher_Muncher.__docgenInfo,name:"Muncher",path:"src/Muncher.tsx#Muncher"})}catch(__react_docgen_typescript_loader_error){}const src_Muncher_stories={title:"Muncher",component:Muncher_Muncher,parameters:{layout:"fullscreen"}},Primary={args:{}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]}}]);